                            3. Dicionários e conjuntos


    Usamos dicionários em todos os nossos programas Python. Se não diretamente em nosso código, então
indiretamente, pois o tipo dict é um elemento fundamental da implementação do Python. Atributos de classes
e de instâncias, espaços de nomes de módulos e argumentos nomeados de funções são alguns dos elementos
fundamentais do Python representados na memória por dicionários. O __builtins__.__dict__ armazena todos os
tipos, funções e objetos embutidos.

    Por seu papel crucial, os dicts do Python são extremamente otimizados—e continuam recebendo melhorias.
As Tabelas de hash são o motor por trás do alto desempenho dos dicts do Python.

    Outros tipos embutidos baseados em tabelas de hash são set e frozenset. Eles oferecem uma API mais
completa e operadores mais robustos que os conjuntos que você pode ter encontrado em outras linguagens
populares. Em especial, os conjuntos do Python implementam todas as operações fundamentais da teoria dos
conjuntos, como união, intersecção, testes de subconjuntos, etc. Com eles, podemos expressar algoritmos de
forma mais declarativa, evitando o excesso de loops e condicionais aninhados.


